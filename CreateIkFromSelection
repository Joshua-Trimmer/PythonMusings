import maya.cmds as cmds

boneList = cmds.ls(sl = True)
duplicateBones = []
for bone in boneList:
    cmds.duplicate(bone, parentOnly = True, name = bone + '_ik')
    cmds.select(clear = True)
    newBone = bone + '_ik'
    duplicateBones.append(str(newBone))

listLength = len(duplicateBones)
for i in range(listLength - 1):
    cmds.parent(duplicateBones[i+1], duplicateBones[i])
for x in range(listLength):
    cmds.makeIdentity(duplicateBones[x], apply = True)
cmds.parent(duplicateBones[0], world = True)    

cmds.ikHandle(name = boneList[listLength-1] + '_ikHandle', startJoint = duplicateBones[0], 
              endEffector = duplicateBones[listLength-1])

handleName = boneList[listLength-1] + '_ikHandle'
newname = duplicateBones[listLength-1] + '_ctrl'
cmds.circle(name = newname, radius = 15)
cmds.setAttr(str(newname)+ '.rotateY', 90)
cmds.makeIdentity(newname, apply = True)
cmds.group(name=newname.replace('_ctrl', '_drive'))
groupMade = cmds.group(name=newname.replace('_ctrl', '_grp'))
cmds.parentConstraint(boneList[listLength-1], groupMade, maintainOffset = False)
cmds.parentConstraint(boneList[listLength-1], groupMade, remove = True)
cmds.pointConstraint(newname, handleName, maintainOffset = True)
cmds.orientConstraint(newname, duplicateBones[listLength-1], maintainOffset = True)

for z in range(listLength):
    cmds.parentConstraint(duplicateBones[z], boneList[z], maintainOffset = True)
