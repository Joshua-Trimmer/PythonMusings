###Get translation and rotation of controls in a dictionary###
for objects in selCurves:
    rootTranslate = cmds.getAttr('%s.translate' % objects)
    rootRotation = cmds.getAttr('%s.rotate' % objects)
    translate = {}
    rotation = {}
    translate['translate'] = rootTranslate
    rotation['rotation'] = rootRotation 
    savedControls[objects] = translate, rotation

###Get names of parents of controls###
ctrls = cmds.ls(sl = True)
connections = cmds.listConnections(ctrls, type= 'constraint')
connections = connections[0]
#print connections
gettingConstraints = []
for i in range(9):
    rawAttributes = cmds.listAttr(connections, string = '*W' + str(i)) 
    if rawAttributes == None:
        pass
    else:
        gettingConstraints.append(rawAttributes)


#########################Saves out hierarchy#########################
def hierarchyTree(theParent, tree):
    children = cmds.listRelatives(theParent, c = True, type='transform')
    if children:
        tree[str(theParent)] = (children, {})
        for child in children:
            hierarchyTree(child, tree[str(theParent)][1])

selection = cmds.ls(sl = True)
hierarchy_tree = {}
hierarchyTree(selection, hierarchy_tree)
print pprint.pprint(hierarchy_tree, width = 1, indent = 2)
#####################################################################



#########################Copy Over Controls#########################
def copy_ctrl_shapes():

    import maya.cmds as cmds

    sel = cmds.ls(sl=True)

    new_ctrl = sel[0]
    old_ctrls = sel[0:None]
            
    for old_ctrl in old_ctrls:
        copy = cmds.duplicate(new_ctrl, renameChildren=True)
        cmds.delete(cmds.parentConstraint(old_ctrl, copy))
        cmds.parent(copy, old_ctrl)
        cmds.makeIdentity(copy, apply=True)
        old_shapes = cmds.listRelatives(old_ctrl, type="shape", fullPath=True)
        ctrl_shapes = cmds.listRelatives(copy, type="shape", fullPath=True) 
        color = cmds.getAttr(old_shapes[0] + ".overrideColor")                
        
        for ctrl_shape in ctrl_shapes:            
            cmds.setAttr(ctrl_shape + ".overrideEnabled", 1)
            cmds.setAttr(ctrl_shape + ".overrideColor", color)
            newName = cmds.rename(ctrl_shape, old_ctrl + "Shape#")
            cmds.parent(newName, old_ctrl, relative=True, shape=True)
        
        cmds.delete(copy)
        cmds.delete(old_shapes)
    cmds.select(clear=True)
    
copy_ctrl_shapes()
#####################################################################
